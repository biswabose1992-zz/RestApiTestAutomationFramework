{
  "stats": {
    "suites": 4,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2020-08-25T09:50:59.867Z",
    "end": "2020-08-25T09:51:01.562Z",
    "duration": 1695,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6d3a3047-9432-4663-8d7d-39c6c5552979",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "76e771d9-3650-423e-a3d8-a02fa402cb4b",
          "title": "Code to verify GET query ",
          "fullFile": "/Users/boseb01/RestApiTestAutomationFramework/test/1 GET.js",
          "file": "/test/1 GET.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Read a resource-GET",
              "fullTitle": "Code to verify GET query  Read a resource-GET",
              "timedOut": false,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = {  \n    url: 'https://jsonplaceholder.typicode.com/posts/1',\n    method: 'GET',\n    \n};\nrequest(options, function(error,response,body) {  \n    let json = JSON.parse(body);\n    console.log(json);\n    assert.equal(response.statusCode,'200')\n    done();\n});",
              "err": {},
              "uuid": "0cdcc2d4-3437-455c-85b7-89acf0787bf6",
              "parentUUID": "76e771d9-3650-423e-a3d8-a02fa402cb4b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0cdcc2d4-3437-455c-85b7-89acf0787bf6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 164,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "77d5a2d9-6df3-4c5f-9f86-83f71902eb71",
          "title": "Code to verify POST query ",
          "fullFile": "/Users/boseb01/RestApiTestAutomationFramework/test/2 POST.js",
          "file": "/test/2 POST.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create a resource-POST",
              "fullTitle": "Code to verify POST query  Create a resource-POST",
              "timedOut": false,
              "duration": 397,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = {  \n   url: 'https://jsonplaceholder.typicode.com/posts',\n   method: 'POST',\n   headers:\n   { \"Content-type\": \"application/json; charset=UTF-8\"\n   },\n   \n   body: JSON.stringify({\n      title: 'foo',\n      body: 'bar',\n      userId: 1\n      }),\n   \n};\nrequest(options, function(error,response,body) {  \n   let json = JSON.parse(body);\n   console.log(json);\n   assert.equal(response.statusCode,'201')\n   done();\n});",
              "err": {},
              "uuid": "8f1582b6-225b-4702-b1a3-8256d06ac0c4",
              "parentUUID": "77d5a2d9-6df3-4c5f-9f86-83f71902eb71",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8f1582b6-225b-4702-b1a3-8256d06ac0c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 397,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "40dfb175-34f5-49a7-8378-374d84949642",
          "title": "Code to verify PUT & PATCH query ",
          "fullFile": "/Users/boseb01/RestApiTestAutomationFramework/test/3 PUT.js",
          "file": "/test/3 PUT.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update a resource-PUT",
              "fullTitle": "Code to verify PUT & PATCH query  Update a resource-PUT",
              "timedOut": false,
              "duration": 354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = {  \n   url: 'https://jsonplaceholder.typicode.com/posts/1',\n   method: 'PUT',\n   headers:\n   { \"Content-type\": \"application/json; charset=UTF-8\"\n   },\n   \n   body: JSON.stringify({\n      title: 'foo',\n      body: 'bar',\n      userId: 1,\n      id: 1,\n      }),\n   \n};\nrequest(options, function(error,response,body) {  \n   let json = JSON.parse(body);\n   console.log(json);\n   assert.equal(response.statusCode,'200')\n   done();\n});",
              "err": {},
              "uuid": "eee642cd-ad63-42eb-9679-20f883f21120",
              "parentUUID": "40dfb175-34f5-49a7-8378-374d84949642",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update a resource-PATCH",
              "fullTitle": "Code to verify PUT & PATCH query  Update a resource-PATCH",
              "timedOut": false,
              "duration": 365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = {  \n   url: 'https://jsonplaceholder.typicode.com/posts/1',\n   method: 'PATCH',\n   headers:\n   { \"Content-type\": \"application/json; charset=UTF-8\"\n   },\n   \n   body: JSON.stringify({\n      title: 'foo1' //title is being updates here\n      \n      }),\n   \n};\nrequest(options, function(error,response,body) {  \n   let json = JSON.parse(body);\n   console.log(json);\n   assert.equal(response.statusCode,'200')\n   done();\n});",
              "err": {},
              "uuid": "c33acc4b-75d2-4c97-9c30-5989b4fbbd32",
              "parentUUID": "40dfb175-34f5-49a7-8378-374d84949642",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eee642cd-ad63-42eb-9679-20f883f21120",
            "c33acc4b-75d2-4c97-9c30-5989b4fbbd32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 719,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b3ec0980-923e-4c52-86dd-a43e0d83e4db",
          "title": "Code to verify DELETE query ",
          "fullFile": "/Users/boseb01/RestApiTestAutomationFramework/test/4 DELETE.js",
          "file": "/test/4 DELETE.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create a resource-DELETE",
              "fullTitle": "Code to verify DELETE query  Create a resource-DELETE",
              "timedOut": false,
              "duration": 404,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = {  \n   url: 'https://jsonplaceholder.typicode.com/posts/1',\n   method: 'DELETE'\n   \n};\nrequest(options, function(error,response,body) {  \n   let json = JSON.parse(body);\n   console.log(json);\n   assert.equal(response.statusCode,'200')\n   done();\n});",
              "err": {},
              "uuid": "ef4cf8d8-0597-4776-af06-fa3f7b287dff",
              "parentUUID": "b3ec0980-923e-4c52-86dd-a43e0d83e4db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef4cf8d8-0597-4776-af06-fa3f7b287dff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 404,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}